{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,GAAG,EAAE;AAAvB,CAAT,CAAb;AAEA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,CAAS,MAAT,CAAZ;AACA,IDEa,GCFN,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,CAAS,KAAT,CAAZ;AAEA,ADGE,ICHE,CAAC,EAAL,CAAQ,QAAR,ADGsB,ECHJ,EDGhB,EAAmC;ACHnB,ADGmB,SCHb,OAAO,CAAC,GAAR,CAAY,WAAZ,CAAN;AAAA,CAAlB;AACA,ADEsB,ICFlB,CAAC,EAAL,CAAQ,CDEc,IAAA,GCFtB,ADEsB,ECFJ,EDEI;ACFJ,ADAhB,SCAsB,ADAtB,MAAA,CCA6B,CAAC,CDAU,ECAlB,ADAtB,CCAkC,WAAZ,CAAN;AAAA,ADEuB,CCFzC;AACA,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB;AAAA,SAAM,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAN;AAAA,CAAhB;AAEA,OAAO,CAAC,GAAR,CAAY,IAAZ,QDCM,UAAgB;ACCtB,ADAI,ICAA,CAAC,OAAL,CAAa,ADCP,KAAK,GCDX,CDCM,CAAU,QAAV,KACA,IAAI,KAAJ,qBACe,QADf,2CACwD,KAAK,IAD7D,EAFF;ACCJ,ADKG,ICLC,CAAC,OAAL,CAAa,MAAb;AACA,IAAI,CAAC,OAAL,CAAa,aAAb;;wBDMM,QAAiB;AACnB,MAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD;;;uBAEE,WAAmB,UAAkB;AACtC,UAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,WAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD;;;4BAEO,WAAiB;AACvB,UAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;AAEA,UAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AAExC,MAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,EAAD;AAAA,eAAkB,EAAE,EAApB;AAAA,OAAjB;AACD;;;;;;AA9BH,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): number | string {\n    return (\n      this.data[propName] ||\n      new Error(\n        `propName: ${propName} does not exist on User data: ${this.data}`\n      )\n    );\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) return;\n\n    handlers.forEach((cb: Callback) => cb());\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'MyUser', age: 28 });\n\nconsole.log(user.get('name'));\nconsole.log(user.get('age'));\n\nuser.on('change', () => console.log('Change #1'));\nuser.on('change', () => console.log('Change #2'));\nuser.on('save', () => console.log('Saved'));\n\nconsole.log(user);\n\nuser.trigger('change');\nuser.trigger('save');\nuser.trigger('doesntExist');\n"]}